# fichier: tree_dots.py
# Usage:  python tree_dots.py [chemin_du_projet]
# But   : affiche l'arborescence sous forme "racine.sousdossier.fichier"

import os
import sys

# Dossiers souvent bruyants que l'on peut ignorer (modifiez selon vos besoins)
SKIP_DIRS = {'.git', '__pycache__', 'node_modules', '.idea', '.venv', '.mypy_cache'}

def is_hidden(name: str) -> bool:
    return name.startswith('.') and name not in {'.git'}  # gardez .git si vous voulez

def walk_dots(root_abs: str, current_abs: str, prefix: str) -> None:
    try:
        entries = sorted(os.listdir(current_abs))
    except PermissionError:
        return  # on ignore les emplacements non accessibles

    for name in entries:
        # Filtrage basique
        if name in SKIP_DIRS:
            continue
        if is_hidden(name):
            continue

        path = os.path.join(current_abs, name)
        # Ã‰viter les boucles via liens symboliques
        if os.path.islink(path):
            continue

        dotted = f"{prefix}.{name}" if prefix else name
        print(dotted)

        if os.path.isdir(path):
            walk_dots(root_abs, path, dotted)

def main():
    start = sys.argv[1] if len(sys.argv) > 1 else os.getcwd()
    start_abs = os.path.abspath(start)
    root_name = os.path.basename(start_abs.rstrip(os.sep)) or start_abs
    print(root_name)  # racine
    walk_dots(start_abs, start_abs, root_name)

if __name__ == "__main__":
    main()