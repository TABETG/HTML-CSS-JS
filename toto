<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- === Coordonnées du module === -->
  <groupId>com.bnpparibas.dsibddf.ap00420</groupId>
  <artifactId>stream-fact-batch</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>stream-fact-batch</name>
  <description>Stream Fact Batch (Spring Batch)</description>
  <packaging>jar</packaging>

  <!-- Parent Spring Boot -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.7</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <!-- === Propriétés globales === -->
  <properties>
    <java.version>17</java.version>
    <maven.compiler.release>17</maven.compiler.release>

    <!-- Tests & coverage -->
    <jacoco.version>0.8.10</jacoco.version>

    <!-- Dépendances externes -->
    <postgres.version>42.7.3</postgres.version>
    <mongodb.driver.version>4.11.1</mongodb.driver.version>

    <!-- IBM COS SDK (S3-like). Ajuste si votre Artifactory a une autre version. -->
    <ibm.cos.sdk.version>2.15.3</ibm.cos.sdk.version>

    <!-- BouncyCastle -->
    <bouncycastle.version>1.78.1</bouncycastle.version>
  </properties>

  <!-- === Dépendances === -->
  <dependencies>
    <!-- Spring de base -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <!-- Web (facultatif si pas d’API REST exposée) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Batch -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-batch</artifactId>
    </dependency>

    <!-- Data JPA / JDBC -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>

    <!-- Drivers DB -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgres.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Mongo (si vous l’utilisez via profils "local/test") -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- IBM Cloud Object Storage (API com.ibm.cloud.objectstorage.*) -->
    <!-- Ce bundle apporte le client S3 compatible utilisé dans CloudFileManager -->
    <dependency>
      <groupId>com.ibm.cos</groupId>
      <artifactId>ibm-cos-java-sdk</artifactId>
      <version>${ibm.cos.sdk.version}</version>
    </dependency>

    <!-- BouncyCastle (une seule déclaration, éviter les doublons) -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpg-jdk15on</artifactId>
      <version>${bouncycastle.version}</version>
    </dependency>

    <!-- Lombok (compile only) -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- ======= TEST ======= -->
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <!-- JUnit 4 out -->
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- === Build / Plugins === -->
  <build>
    <plugins>
      <!-- Spring Boot -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <!-- Compiler -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <release>${maven.compiler.release}</release>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <!-- Tests JUnit Platform -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <useSystemClassLoader>true</useSystemClassLoader>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
          </includes>
        </configuration>
      </plugin>

      <!-- === JaCoCo : un seul gate à 80% (écrase le parent via IDs default-*) === -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <!-- <configuration><append>true</append></configuration> -->
          </execution>

          <execution>
            <id>default-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>

          <execution>
            <id>default-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.80</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <!-- Exclusions qui tirent artificiellement la couverture vers le bas -->
              <excludes>
                <!-- Configs Spring Batch / Jobs / Steps / Listeners / package-info -->
                <exclude>**/*Configuration*.class</exclude>
                <exclude>**/*Config.class</exclude>
                <exclude>**/job/**</exclude>
                <exclude>**/listener/**</exclude>
                <exclude>**/package-info.class</exclude>

                <!-- DTO/POJO/mappers/enums purs -->
                <exclude>**/dto/**</exclude>
                <exclude>**/pojo/**</exclude>
                <exclude>**/model/**</exclude>
                <exclude>**/mapper/**</exclude>
                <exclude>**/mappers/**</exclude>

                <!-- Classe main -->
                <exclude>**/main/**</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- === Profiles conseillés (exemples) === -->
  <profiles>
    <profile>
      <id>local-postgresql</id>
      <properties>
        <spring.profiles.active>local-postgresql</spring.profiles.active>
      </properties>
    </profile>
    <profile>
      <id>test</id>
      <properties>
        <spring.profiles.active>test</spring.profiles.active>
      </properties>
    </profile>
    <profile>
      <id>cloud-dev</id>
      <properties>
        <spring.profiles.active>cloud-dev</spring.profiles.active>
      </properties>
    </profile>
  </profiles>

</project>