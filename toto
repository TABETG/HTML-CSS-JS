@Test
public void process_should_return_result_when_synchro_or_closure_valid() {
    try (MockedStatic<BillingSpaceMapperToDomain> billingMapper = Mockito.mockStatic(BillingSpaceMapperToDomain.class);
         MockedStatic<LoanFolderMapperToDomain> loanMapper = Mockito.mockStatic(LoanFolderMapperToDomain.class)) {

        // Mapper
        billingMapper.when(() -> BillingSpaceMapperToDomain.toDomain(any())).thenReturn(billingSpace);
        loanMapper.when(() -> LoanFolderMapperToDomain.toDomain(any())).thenReturn(loanFolder);

        // Commandes utilisées
        when(commandExecutor.execute(eq(SynchroLoanFoldersCommand.class), any(SynchroLoanFoldersRequest.class)))
                .thenReturn(loanFolderSynchroResult);
        when(commandExecutor.execute(eq(SynchroBillingSpaceCommand.class), any(SynchroBillingSpaceRequest.class)))
                .thenReturn(synchroBillingSpace);

        // Condition de succès : synchroBillingSpace.TO_CLOSE
        when(synchroBillingSpace.getBillingSpaceStatus()).thenReturn(BillingSpaceStatusEnum.TO_CLOSE);

        // Analyse non vide
        when(loanFolderSynchroResult.getLoanFolderSynchroAnalysis()).thenReturn(loanFolderSynchroAnalysis);
        when(loanFolderSynchroAnalysis.getContractLoandFolderAnalysisList())
                .thenReturn(Collections.singletonList(contractAnalysis));

        // Exécution
        SynchroResult result = processor.process(billingSpaceEntity);

        // Vérifications
        assertNotNull(result);
        assertEquals(synchroBillingSpace, result.getBillingSpace());  // c’est bien le billingSpace synchro renvoyé
        assertEquals(loanFolderSynchroResult, result.getLoanFolderSynchroResult());
    }
}