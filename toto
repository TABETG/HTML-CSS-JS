package com.bnpparibas.dsibddf.ap00420.streamfact.batch.billingspace.create;

import com.bnpparibas.dsibddf.ap00420.streamfact.batch.listener.CommonStepExecutionListener;
import com.bnpparibas.dsibddf.ap00420.streamfact.batch.stockintegration.CreateEligibleLoanFoldersTasklet;
import com.bnpparibas.dsibddf.ap00420.streamfact.batch.stockintegration.processor.EligibleLoanFolderProcessor;
import com.bnpparibas.dsibddf.ap00420.streamfact.batch.stockintegration.reader.EligibleLoanFoldersIteamReader;
import com.bnpparibas.dsibddf.ap00420.streamfact.batch.stockintegration.writer.CompleteLoanFoldersAndCreateBillingSpacesItemWriter;
import com.bnpparibas.dsibddf.ap00420.streamfact.domain.entity.loanfolder.model.LoanFolder;
import com.bnpparibas.dsibddf.ap00420.streamfact.infrastructure.sql.entities.loanfolder.model.LoanFolderEntity;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.job.flow.FlowJob;
import org.springframework.batch.core.launch.support.RunIdIncrementer;
import org.springframework.batch.core.repository.JobRepository;
import org.springframework.batch.core.step.tasklet.TaskletStep;
import org.springframework.transaction.PlatformTransactionManager;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class BillingSpaceConfigurationTest {

    @InjectMocks
    private BillingSpaceConfiguration configuration;

    @Mock
    private CreateEligibleLoanFoldersTasklet createEligibleLoanFoldersTasklet;
    @Mock
    private EligibleLoanFoldersIteamReader eligibleLoanFoldersIteamReader;
    @Mock
    private EligibleLoanFolderProcessor eligibleLoanFolderProcessor;
    @Mock
    private CompleteLoanFoldersAndCreateBillingSpacesItemWriter completeLoanFoldersAndCreateBillingSpacesItemWriter;
    @Mock
    private CommonStepExecutionListener commonStepExecutionListener;
    @Mock
    private PlatformTransactionManager platformTransactionManager;
    @Mock
    private JobRepository jobRepository;

    private Step createEligibleStep;
    private Step completeStep;

    @Before
    public void setUp() {
        createEligibleStep = configuration.createEligibleLoanFoldersStep(jobRepository);
        completeStep = configuration.completeAndCreateBillingSpaceStep(jobRepository);
    }

    @Test
    public void createEligibleLoanFoldersStep_should_create_valid_tasklet_step() {
        assertNotNull(createEligibleStep);
        assertEquals("createEligibleLoanFoldersStep", createEligibleStep.getName());
        assertTrue(createEligibleStep instanceof TaskletStep);
    }

    @Test
    public void completeAndCreateBillingSpaceStep_should_create_valid_chunk_step() {
        assertNotNull(completeStep);
        assertEquals("completeAndCreateBillingSpaceStep", completeStep.getName());
        assertTrue(completeStep instanceof TaskletStep);
    }

    @Test
    public void createBillingSpaceJob_should_create_valid_flow_job() {
        Job job = configuration.createBillingSpace(jobRepository, createEligibleStep, completeStep);
        assertNotNull(job);
        assertTrue(job instanceof FlowJob);

        FlowJob flowJob = (FlowJob) job;
        assertEquals("CreateBillingSpaceJob", flowJob.getName());
        assertTrue(flowJob.getJobParametersIncrementer() instanceof RunIdIncrementer);
        assertNotNull(flowJob.getStep("createEligibleLoanFoldersStep"));
        assertNotNull(flowJob.getStep("completeAndCreateBillingSpaceStep"));
    }

    @Test
    public void injected_beans_should_not_be_null() {
        assertNotNull(configuration);
        assertNotNull(createEligibleLoanFoldersTasklet);
        assertNotNull(eligibleLoanFoldersIteamReader);
        assertNotNull(eligibleLoanFolderProcessor);
        assertNotNull(completeLoanFoldersAndCreateBillingSpacesItemWriter);
        assertNotNull(commonStepExecutionListener);
        assertNotNull(platformTransactionManager);
        assertNotNull(jobRepository);
    }

    @Test
    public void all_methods_should_be_invoked_without_error() {
        configuration.createEligibleLoanFoldersStep(jobRepository);
        configuration.completeAndCreateBillingSpaceStep(jobRepository);
        configuration.createBillingSpace(jobRepository, createEligibleStep, completeStep);
        verifyNoInteractions(commonStepExecutionListener);
    }
}